DfAttritionCost(valid.sub, "pred_glm2")
valid.sub$pred_glm2 <- ifelse(predict(m.glm2, valid.sub, type="response") >= 0.15, 1, 0)
DfAttritionCost(valid.sub, "pred_glm2")
m.ctree <- ctree(fraud_ind ~ cnp_indf + authzn_amt + cl_amt +
mgroup1 + mgroup2 + mgroup3,
data=train.sub)
valid.sub$pred_ctree <- ifelse(predict(m.ctree, valid.sub, type="response") >= 0.5, 1, 0)
DfAttritionCost(valid.sub, "pred_ctree")
l <- predict(m.ctree, valid.sub, type="response")
DfAttritionCost(valid.sub, "pred_glm")
DfAttritionCost(valid.sub, ifelse(l >= 0.5, 1, 0))
head(l)
DfAttritionCost(valid.sub, ifelse(l$fraud_ind >= 0.5, 1, 0))
l <- as.data.frame(l)
head(l)
DfAttritionCost(valid.sub, ifelse(l$fraud_ind >= 0.5, 1, 0))
l$round <- ifelse(l$fraud_ind >= 0.4, 1, 0)
DfAttritionCost(valid.sub, l2)
DfAttritionCost(valid.sub, l$round)
valid.sub$pred_ctree <- ifelse(predict(m.ctree, valid.sub, type="response") >= 0.15, 1, 0)
head(train.df)
indgroup.vec <- df.names[str_detect(df.names, "ind_group")]
library(stringr)
indgroup.vec <- df.names[str_detect(df.names, "ind_group")]
indgroup.vec
df.names[str_detect(df.names, "std_group13")]
df.names[str_detect(df.names, "std_group17")]
df.names[str_detect(df.names, "std_group17_e")]
df.names[str_detect(df.names, "std_group17_s")]
df.names[str_detect(df.names, "std_group17_u")]
df.names[str_detect(df.names, "std_group17_k")]
df.names[str_detect(df.names, "mean_group17_k")]
df.names[str_detect(df.names, "mean_group17_s")]
df.names[str_detect(df.names, "mean_group17_u")]
df.names[str_detect(df.names, "mean_group17_k")]
table(df$mean_group17_s_p180d)
df.names[str_detect(df.names, "mean_group17_k")]
df.names[str_detect(df.names, "mean_group17_s")]
df.names[str_detect(df.names, "std_group17_s")]
df.names[str_detect(df.names, "std_group4")]
df.names[str_detect(df.names, "mean_group4")]
df.names[str_detect(df.names, "mean_group5")]
df.names[str_detect(df.names, "mean_group6")]
df.names[str_detect(df.names, "mean_group7")]
df.names[str_detect(df.names, "mean_group9")]
df.names[str_detect(df.names, "mean_group10")]
df.names[str_detect(df.names, "mean_group18")]
df.names[str_detect(df.names, "mean_group19")]
df.names[str_detect(df.names, "mean_group24")]
df.names[str_detect(df.names, "mean_group4")]
df.names[str_detect(df.names, "std_group4")]
df.names[str_detect(df.names, "mean_group4")]
df.names[str_detect(df.names, "mean_group5")]
df.names[str_detect(df.names, "std_group5")]
df.names[str_detect(df.names, "std_group7")]
df.names[str_detect(df.names, "mean_group7")]
df.names[str_detect(df.names, "mean_group9")]
df.names[str_detect(df.names, "std_group9")]
df.names[str_detect(df.names, "std_group10")]
df.names[str_detect(df.names, "std_group13")]
df.names[str_detect(df.names, "std_group18")]
df.names[str_detect(df.names, "mean_group18")]
df.names[str_detect(df.names, "mean_group19")]
df.names[str_detect(df.names, "std_group19")]
df.names[str_detect(df.names, "std_group24")]
df.names[str_detect(df.names, "mean_group24")]
df$std_mgroup1 <- df$std_group13_p90d
df$mean_mgroup1 <- df$mean_group13_p90d
df$mgroup1_extreme <- abs(df$mean_mgroup1 - df$authzn_amt) / df$std_group1
df$mgroup1_extreme <- apply(df, 1, function(x) abs(x['mean_mgroup1'] - x['authzn_amt']) / x['std_group1']
)
class(df$mean_mgroup1)
class(df$authzn_amt)
df$std_mgroup1 <- as.numeric(df$std_group13_p90d)
df$mean_mgroup1 <- as.numeric(df$mean_group13_p90d)
df$mgroup1_extreme <- apply(df, 1, function(x) abs(x['mean_mgroup1'] - x['authzn_amt']) / x['std_group1'])
df$mgroup1_extreme <- apply(df, 1, function(x) abs(x['mean_mgroup1'] - as.numeric(x['authzn_amt'])) / x['std_group1'])
l <- subset(df, mean_group13_p90d != 0)
l2 <- apply(l, 1, function(x) abs(x['mean_mgroup1'] - x['authzn_amt']) / x['std_group1'])
l2 <- apply(l, 1, function(x) abs(x['mean_mgroup1'] - x['authzn_amt']))
l <- subset(df, mean_group13_p90d != 0, select = c("mean_mgroup1, authzn_amt, std_mgroup1"))
# Metagroup 1: location (90d)
df$std_mgroup1 <- as.numeric(df$std_group13_p90d)
df$mean_mgroup1 <- as.numeric(df$mean_group13_p90d)
l <- subset(df, mean_group13_p90d != 0, select = c("mean_mgroup1, authzn_amt, std_mgroup1"))
l <- subset(df, mean_group13_p90d != 0, select = c("mean_mgroup1", "authzn_amt", "std_mgroup1"))
head(l)
l <- subset(df, mean_group13_p90d != 0, select = c("fraud_ind", "mean_mgroup1", "authzn_amt", "std_mgroup1"))
head(l)
table(l$fraud_ind)
l <- subset(df, mean_group13_p90d != 0 && validation == 0, select = c("fraud_ind", "mean_mgroup1", "authzn_amt", "std_mgroup1"))
head(l)
table(l$fraud_ind)
l$mean_mgroup1 == 0
l$mean_mgroup1[3] == 0
head(l)
l <- subset(df, mean_mgroup1 != 0 && validation == 0, select = c("fraud_ind", "mean_mgroup1", "authzn_amt", "std_mgroup1"))
head(l)
l$mean_mgroup1[3] == 1
l$mean_mgroup1[3] == 0
df$std_mgroup1 <- df$std_group13_p90d
df$mean_mgroup1 <- df$mean_group13_p90d
head(df)
l <- subset(df, mean_mgroup1 != 0 && validation == 0, select = c("fraud_ind", "mean_mgroup1", "authzn_amt", "std_mgroup1"))
head(l)
tail(l)
l <- subset(df, subset = mean_mgroup1 != 0 && validation == 0, select = c("fraud_ind", "mean_mgroup1", "authzn_amt", "std_mgroup1"))
head(l)
tail(l)
l <- subset(df, subset = mean_mgroup1 != 0 && validation == 1, select = c("fraud_ind", "mean_mgroup1", "authzn_amt", "std_mgroup1"))
tail(l)
l <- subset(df, subset = mean_mgroup1 != 0 & validation == 1, select = c("fraud_ind", "mean_mgroup1", "authzn_amt", "std_mgroup1"))
heaD(l)
head(l)
tail(l)
l <- subset(df, subset = mean_mgroup1 != 0 & validation == 0, select = c("fraud_ind", "mean_mgroup1", "authzn_amt", "std_mgroup1"))
head(l)
tail(l)
l2 <- apply(l, 1, function(x) abs(x['mean_mgroup1'] - x['authzn_amt']))
head(l2)
l$diff <- apply(l, 1, function(x) abs(x['mean_mgroup1'] - x['authzn_amt']))
head(l)
table(l$fraud_ind)
l2 <- subset(l, fraud_ind == 1)
head(l2)
Viewdata(l2)
viewdata(l2)
View(l2)
head(l2, 20)
l <- subset(df, subset = std_mgroup1 != 0 & validation == 0, select = c("fraud_ind", "mean_mgroup1", "authzn_amt", "std_mgroup1"))
head(l)
l$diff <- apply(l, 1, function(x) abs(x['mean_mgroup1'] - x['authzn_amt']) / x['std_mgroup1'])
head(l)
table(l$fraud_ind)
aggregate(diff ~ fraud_ind, l, mean)
aggregate(diff ~ fraud_ind, l, med)
aggregate(diff ~ fraud_ind, l, median)
df.names[str_detect(df.names, group13)]
df.names[str_detect(df.names, group13),]
df.names[str_detect(df.names, "group13")]
l <- subset(df, ind_group13 == 1, select = c("fraud_ind", "count_group13_p180d"))
head(l)
aggregate(count_group13_p180d ~ fraud_ind, l, mean)
aggregate(count_group13_p180d ~ fraud_ind, l, median)
aggregate(count_group13_p180d ~ fraud_ind, l, mean)
aggregate(count_group13_p180d ~ fraud_ind, l, max)
df.names[str_detect(df.names, "group4")]
df.names[str_detect(df.names, "count_group4")]
l <- subset(df, ind_group4 == 1, select = c("fraud_ind", "count_group4_p90d"))
aggregate(count_group4_p90d ~ fraud_ind, l, max)
l <- subset(df, ind_group4 == 1, select = c("fraud_ind", "count_group4_p180d"))
aggregate(count_group4_p180d ~ fraud_ind, l, max)
aggregate(count_group4_p180d ~ fraud_ind, l, mean)
aggregate(count_group4_p180d ~ fraud_ind, l, median)
aggregate(count_group4_p180d ~ fraud_ind, l, min)
aggregate(count_group4_p180d ~ fraud_ind, l, max)
df.names[str_detect(df.names, "count_group13")]
df.names[str_detect(df.names, "count_group17_e")]
df.names[str_detect(df.names, "count_group17_s")]
df.names[str_detect(df.names, "count_group17_u")]
df.names[str_detect(df.names, "count_group17_k")]
df.names[str_detect(df.names, "count_group4")]
df.names[str_detect(df.names, "count_group5")]
df.names[str_detect(df.names, "count_group7")]
df.names[str_detect(df.names, "count_group9")]
df.names[str_detect(df.names, "count_group10")]
df.names[str_detect(df.names, "count_group18")]
df.names[str_detect(df.names, "count_group19")]
df.names[str_detect(df.names, "count_group4")]
df.names[str_detect(df.names, "count_group5")]
df.names[str_detect(df.names, "count_group24")]
df$count_mgroup1 <- df$count_group13_p180d
df[df$ind_group17_e == 1, ]$count_mgroup2 <- df$count_group17_e_p180d
# df[df$ind_group17_s == 1, ]$count_mgroup2 <- df$count_group17_s_p90d
df[df$ind_group17_u == 1, ]$count_mgroup2 <- df$count_group17_u_p180d
df[df$ind_group17_k == 1, ]$count_mgroup2 <- df$count_group17_k_p180d
# Metagroup 3: Type
df[df$ind_group4 == 1, ]$count_mgroup3 <- df$count_group4_p90d
df[df$ind_group5 == 1, ]$count_mgroup3 <- df$count_group5_p90d
df[df$ind_group7 == 1, ]$count_mgroup3 <- df$count_group7_p30d
df[df$ind_group9 == 1, ]$count_mgroup3 <- df$count_group9_p90d
df[df$ind_group10 == 1, ]$count_mgroup3 <- 3*df$count_group10_p30d
df[df$ind_group18 == 1, ]$count_mgroup3 <- df$count_group18_p180d/2
df[df$ind_group19 == 1, ]$count_mgroup3 <- df$count_group19_p180d/2
df$count_mgroup1 <- df$count_group13_p180d
# Metagroup 2: POS method (90d)
df[df$ind_group17_e == 1, ]$count_mgroup2 <- df$count_group17_e_p180d
df$count_mgroup2 <- 0
df[df$ind_group17_e == 1, ]$count_mgroup2 <- df$count_group17_e_p180d
df[df$ind_group17_e == 1, ]$count_mgroup2 <- df[df$ind_group17_e == 1, ]$count_group17_e_p180d
df[df$ind_group17_u == 1, ]$count_mgroup2 <- df[df$ind_group17_e == 1, ]$count_group17_u_p180d
df[df$ind_group17_u == 1, ]$count_mgroup2 <- df[df$ind_group17_u == 1, ]$count_group17_u_p180d
df[df$ind_group17_k == 1, ]$count_mgroup2 <- df[df$ind_group17_k == 1, ]$count_group17_k_p180d
df$count_mgroup3 <- 0
df[df$ind_group4 == 1, ]$count_mgroup3 <- df[df$ind_group4 == 1, ]$count_group4_p90d
table(df$count_mgroup3)
summary(df$count_mgroup3)
df$count_mgroup3 <- 0
df[df$ind_group4 == 1, ]$count_mgroup3 <- df[df$ind_group4 == 1, ]$count_group4_p90d
df[df$ind_group5 == 1, ]$count_mgroup3 <- df[df$ind_group5 == 1, ]$count_group5_p90d
df[df$ind_group7 == 1, ]$count_mgroup3 <- df[df$ind_group7 == 1, ]$count_group7_p30d
df[df$ind_group9 == 1, ]$count_mgroup3 <- df[df$ind_group9 == 1, ]$count_group9_p90d
df[df$ind_group10 == 1, ]$count_mgroup3 <- 3*df[df$ind_group10 == 1, ]$count_group10_p30d
df[df$ind_group18 == 1, ]$count_mgroup3 <- df[df$ind_group18 == 1, ]$count_group18_p180d/2
df[df$ind_group19 == 1, ]$count_mgroup3 <- df[df$ind_group19 == 1, ]$count_group19_p180d/2
l <- subset(df, validation == 0)
table(l$fraud_ind)
aggregate(count_mgroup3 ~ fraud_ind, l, mean)
aggregate(count_mgroup3 ~ fraud_ind, l, median)
df$count_mgroup1 <- df$count_group13_p180d
# Metagroup 2: POS method (90d)
df$count_mgroup2 <- 0
df[df$ind_group17_e == 1, ]$count_mgroup2 <- df[df$ind_group17_e == 1, ]$count_group17_e_p180d
# df[df$ind_group17_s == 1, ]$count_mgroup2 <- df$count_group17_s_p90d
df[df$ind_group17_u == 1, ]$count_mgroup2 <- df[df$ind_group17_u == 1, ]$count_group17_u_p180d
df[df$ind_group17_k == 1, ]$count_mgroup2 <- df[df$ind_group17_k == 1, ]$count_group17_k_p180d
# Metagroup 3: Type
df$count_mgroup3 <- 0
df[df$ind_group4 == 1, ]$count_mgroup3 <- df[df$ind_group4 == 1, ]$count_group4_p90d
df[df$ind_group5 == 1, ]$count_mgroup3 <- df[df$ind_group5 == 1, ]$count_group5_p90d
df[df$ind_group7 == 1, ]$count_mgroup3 <- df[df$ind_group7 == 1, ]$count_group7_p30d
df[df$ind_group9 == 1, ]$count_mgroup3 <- df[df$ind_group9 == 1, ]$count_group9_p90d
df[df$ind_group10 == 1, ]$count_mgroup3 <- 3*df[df$ind_group10 == 1, ]$count_group10_p30d
df[df$ind_group18 == 1, ]$count_mgroup3 <- df[df$ind_group18 == 1, ]$count_group18_p180d/2
df[df$ind_group19 == 1, ]$count_mgroup3 <- df[df$ind_group19 == 1, ]$count_group19_p180d/2
m.glm2 <- glm(fraud_ind ~ cnp_indf + authzn_amt + cl_amt +
mgroup1 + mgroup2 + mgroup3,
family=binomial(logit), data=train.sub)
summary(m.glm2)
valid.sub$pred_glm2 <- ifelse(predict(m.glm2, valid.sub, type="response") >= 0.15, 1, 0)
DfAttritionCost(valid.sub, "pred_glm2")
valid.sub$pred_glm2 <- ifelse(predict(m.glm2, valid.sub, type="response") >= 0.50, 1, 0)
DfAttritionCost(valid.sub, "pred_glm2")
m.rf <- randomForest(fraud_ind ~ sb_indf + cnp_indf + authzn_amt + cl_amt +
mgroup1 + mgroup2 + mgroup3 +
count_mgroup1 + count_mgroup2 + count+mgroup3,
data=train.sub)
library(party)
library(foreach)
library(randomForest)
set.seed(1234)
index <- 1:nrow(train.df)
trainindex <- sample(index, as.integer(length(index)*0.6))
# Convert to factors
# Also note we define a new data frame (as a backup)
train2.df <- train.df
train2.df$sb_indf <- factor(train2.df$sb_ind)
train2.df$cnp_indf <- factor(train2.df$cnp_ind)
train2.df$fraud_indf <- factor(train2.df$fraud_ind)
train.sub <- train2.df[trainindex, ]
valid.sub <- train2.df[-trainindex, ]
m.glm2 <- glm(fraud_ind ~ cnp_indf + authzn_amt + cl_amt +
mgroup1 + mgroup2 + mgroup3,
family=binomial(logit), data=train.sub)
summary(m.glm2)
valid.sub$pred_glm2 <- ifelse(predict(m.glm2, valid.sub, type="response") >= 0.50, 1, 0)
DfAttritionCost(valid.sub, "pred_glm2")
m.glm2 <- glm(fraud_ind ~ cnp_indf + authzn_amt + cl_amt +
mgroup1 + mgroup2 + mgroup3 +
count_mgroup1 + count_mgroup2 + count_mgroup3,
family=binomial(logit), data=train.sub)
summary(m.glm2)
names(train.sub)
train.sub[str_detect("count_mgroup")]
l <- names(train.sub)
l[str_detect(l, "count_mgroup")]
train.df <- subset(df, validation == 0)
test.df <- subset(df, validation == 1)
library(party)
library(foreach)
library(randomForest)
set.seed(1234)
index <- 1:nrow(train.df)
trainindex <- sample(index, as.integer(length(index)*0.6))
# Convert to factors
# Also note we define a new data frame (as a backup)
train2.df <- train.df
train2.df$sb_indf <- factor(train2.df$sb_ind)
train2.df$cnp_indf <- factor(train2.df$cnp_ind)
train2.df$fraud_indf <- factor(train2.df$fraud_ind)
train.sub <- train2.df[trainindex, ]
valid.sub <- train2.df[-trainindex, ]
m.glm2 <- glm(fraud_ind ~ cnp_indf + authzn_amt + cl_amt +
mgroup1 + mgroup2 + mgroup3 +
count_mgroup1 + count_mgroup2 + count_mgroup3,
family=binomial(logit), data=train.sub)
summary(m.glm2)
valid.sub$pred_glm2 <- ifelse(predict(m.glm2, valid.sub, type="response") >= 0.50, 1, 0)
DfAttritionCost(valid.sub, "pred_glm2")
valid.sub$pred_glm2 <- ifelse(predict(m.glm2, valid.sub, type="response") >= 0.15, 1, 0)
DfAttritionCost(valid.sub, "pred_glm2")
table(valid.sub$fraud_ind)
table(valid.sub$pred_glm2)
q()
library(e1071)
load("uwdmc2013_raw")
names(df) <- tolower(names(df))
df.names <- names(df)
# Metagroup Indicator Variables -------------------------------------------
# Group 1: location
# Group 2: POS method
# Group 3: Type
# Group 4: Time
# Group 5: Amount - type
# Group 6: Behavioural
# Metagroup 1: location
df$mgroup1 <- factor(df$ind_group13)
# Metagroup 2: POS method
df$mgroup2 <- "other"
df[df$ind_group17_e == 1, ]$mgroup2 <- "e"
df[df$ind_group17_k == 1, ]$mgroup2 <- "k"
df[df$ind_group17_u == 1, ]$mgroup2 <- "u"
# df[df$ind_group17_s == 1, ]$mgroup2 <- "s"
df$mgroup2 <- factor(df$mgroup2)
# Metagroup 3: Type
df$mgroup3 <- "other"
df[df$ind_group4 == 1, ]$mgroup3 <- "auto"
df[df$ind_group5 == 1, ]$mgroup3 <- "discount"
df[df$ind_group7 == 1, ]$mgroup3 <- "elctrncs"
df[df$ind_group9 == 1, ]$mgroup3 <- "fastfood"
df[df$ind_group10 == 1, ]$mgroup3 <- "gas"
df[df$ind_group18 == 1, ]$mgroup3 <- "risky"
df[df$ind_group19 == 1, ]$mgroup3 <- "te"
df[df$ind_group24 == 1, ]$mgroup3 <- "jewellery"
df$mgroup3 <- factor(df$mgroup3)
# Metagroup 4: Time
df$mgroup4 <- factor(df$ind_group21)
# Metagroup 5: Amount - type
df$mgroup5 <- factor(df$ind_group8)
# Metagroup 6: Behavioural
# This is a unique group because a new variable has been created:
# discret : Discretionary (samething as ind_group6)
# Nondiscretcomp : Non-discretionary and compulsory
df$mgroup6 <- "other"
df[df$ind_group6 == 1, ]$mgroup6 <- "discret"
df[(df$ind_group6 == 0 & df$ind_group4 == 1), ]$mgroup6 <- "nondiscretcomp"
df$mgroup6 <- factor(df$mgroup6)
# Count: mgroup ----------------------------------------------
# Metagroup 1: location (90d)
df$count_mgroup1 <- df$count_group13_p180d
# Metagroup 2: POS method (90d)
df$count_mgroup2 <- 0
df[df$ind_group17_e == 1, ]$count_mgroup2 <- df[df$ind_group17_e == 1, ]$count_group17_e_p180d
# df[df$ind_group17_s == 1, ]$count_mgroup2 <- df$count_group17_s_p90d
df[df$ind_group17_u == 1, ]$count_mgroup2 <- df[df$ind_group17_u == 1, ]$count_group17_u_p180d
df[df$ind_group17_k == 1, ]$count_mgroup2 <- df[df$ind_group17_k == 1, ]$count_group17_k_p180d
# Metagroup 3: Type
df$count_mgroup3 <- 0
df[df$ind_group4 == 1, ]$count_mgroup3 <- df[df$ind_group4 == 1, ]$count_group4_p90d
df[df$ind_group5 == 1, ]$count_mgroup3 <- df[df$ind_group5 == 1, ]$count_group5_p90d
df[df$ind_group7 == 1, ]$count_mgroup3 <- df[df$ind_group7 == 1, ]$count_group7_p30d
df[df$ind_group9 == 1, ]$count_mgroup3 <- df[df$ind_group9 == 1, ]$count_group9_p90d
df[df$ind_group10 == 1, ]$count_mgroup3 <- 3*df[df$ind_group10 == 1, ]$count_group10_p30d
df[df$ind_group18 == 1, ]$count_mgroup3 <- df[df$ind_group18 == 1, ]$count_group18_p180d/2
df[df$ind_group19 == 1, ]$count_mgroup3 <- df[df$ind_group19 == 1, ]$count_group19_p180d/2
# df[df$ind_group24 == 1, ]$count_mgroup3 <- df$count_group24_p90d
df.names[str_detect(df.names, "count_group4")]
l <- subset(df, ind_group4 == 1, select = c("fraud_ind", "count_group4_p180d"))
aggregate(count_group4_p180d ~ fraud_ind, l, max)
# Standard Deviation: mgroup ----------------------------------------------
# Metagroup 1: location (90d)
df$std_mgroup1 <- df$std_group13_p90d
df$mean_mgroup1 <- df$mean_group13_p90d
l <- subset(df, subset = std_mgroup1 != 0 & validation == 0, select = c("fraud_ind", "mean_mgroup1", "authzn_amt", "std_mgroup1"))
l$diff <- apply(l, 1, function(x) abs(x['mean_mgroup1'] - x['authzn_amt']) / x['std_mgroup1'])
aggregate(diff ~ fraud_ind, l, median)
# Metagroup 2: POS method (90d)
df$std_mgroup2 <- 99999999999999999
df$mean_mgroup2 <- 0
df[df$ind_group17_e == 1, ]$std_mgroup2 <- df$std_group17_e_p90d
df[df$ind_group17_s == 1, ]$std_mgroup2 <- df$std_group17_s_p90d
df[df$ind_group17_u == 1, ]$std_mgroup2 <- df$std_group17_u_p90d
df[df$ind_group17_k == 1, ]$std_mgroup2 <- df$std_group17_k_p90d
df[df$ind_group17_e == 1, ]$mean_mgroup2 <- df$mean_group17_e_p90d
df[df$ind_group17_s == 1, ]$mean_mgroup2 <- df$mean_group17_s_p90d
df[df$ind_group17_u == 1, ]$mean_mgroup2 <- df$mean_group17_u_p90d
df[df$ind_group17_k == 1, ]$mean_mgroup2 <- df$mean_group17_k_p90d
df$mgroup2_extreme <- abs(df$mean_mgroup2 - df$authzn_amt) / df$std_group2
# Metagroup 3: Type
df$std_mgroup3 <- 99999999999999999
df$mean_mgroup3 <- 0
df[df$ind_group4 == 1, ]$std_mgroup3 <- df$std_group4_p90d
df[df$ind_group5 == 1, ]$std_mgroup3 <- df$std_group5_p90d
df[df$ind_group7 == 1, ]$std_mgroup3 <- df$std_group7_p30d
df[df$ind_group9 == 1, ]$std_mgroup3 <- df$std_group9_p90d
# df[df$ind_group10 == 1, ]$std_mgroup3 <- df$std_group10_p90d
df[df$ind_group18 == 1, ]$std_mgroup3 <- df$std_group18_p180d
df[df$ind_group19 == 1, ]$std_mgroup3 <- df$std_group19_p180d
# df[df$ind_group24 == 1, ]$std_mgroup3 <- df$std_group24_p90d
df[df$ind_group4 == 1, ]$mean_mgroup3 <- df$mean_group4_p90d
df[df$ind_group5 == 1, ]$mean_mgroup3 <- df$mean_group5_p90d
df[df$ind_group7 == 1, ]$mean_mgroup3 <- df$mean_group7_p30d
df[df$ind_group9 == 1, ]$mean_mgroup3 <- df$mean_group9_p90d
# df[df$ind_group10 == 1, ]$mean_mgroup3 <- df$mean_group10_p90d
df[df$ind_group18 == 1, ]$mean_mgroup3 <- df$mean_group18_p180d
df[df$ind_group19 == 1, ]$mean_mgroup3 <- df$mean_group19_p180d
# df[df$ind_group24 == 1, ]$mean_mgroup3 <- df$mean_group24_p90d
df$mgroup3_extreme <- abs(df$mean_mgroup3 - df$authzn_amt) / df$std_group3
# Create Train and Test Data Frames ---------------------------------------
train.df <- subset(df, validation == 0)
test.df <- subset(df, validation == 1)
q()
load("uwdmc2013_raw")
library(stringr)
library(plyr)
library(reshape2)
names(df) <- tolower(names(df))
df.names <- names(df)
# Metagroup Indicator Variables -------------------------------------------
# Group 1: location
# Group 2: POS method
# Group 3: Type
# Group 4: Time
# Group 5: Amount - type
# Group 6: Behavioural
# Metagroup 1: location
df$mgroup1 <- factor(df$ind_group13)
# Metagroup 2: POS method
df$mgroup2 <- "other"
df[df$ind_group17_e == 1, ]$mgroup2 <- "e"
df[df$ind_group17_k == 1, ]$mgroup2 <- "k"
df[df$ind_group17_u == 1, ]$mgroup2 <- "u"
# df[df$ind_group17_s == 1, ]$mgroup2 <- "s"
df$mgroup2 <- factor(df$mgroup2)
# Metagroup 3: Type
df$mgroup3 <- "other"
df[df$ind_group4 == 1, ]$mgroup3 <- "auto"
df[df$ind_group5 == 1, ]$mgroup3 <- "discount"
df[df$ind_group7 == 1, ]$mgroup3 <- "elctrncs"
df[df$ind_group9 == 1, ]$mgroup3 <- "fastfood"
df[df$ind_group10 == 1, ]$mgroup3 <- "gas"
df[df$ind_group18 == 1, ]$mgroup3 <- "risky"
df[df$ind_group19 == 1, ]$mgroup3 <- "te"
df[df$ind_group24 == 1, ]$mgroup3 <- "jewellery"
df$mgroup3 <- factor(df$mgroup3)
# Metagroup 4: Time
df$mgroup4 <- factor(df$ind_group21)
# Metagroup 5: Amount - type
df$mgroup5 <- factor(df$ind_group8)
# Metagroup 6: Behavioural
# This is a unique group because a new variable has been created:
# discret : Discretionary (samething as ind_group6)
# Nondiscretcomp : Non-discretionary and compulsory
df$mgroup6 <- "other"
df[df$ind_group6 == 1, ]$mgroup6 <- "discret"
df[(df$ind_group6 == 0 & df$ind_group4 == 1), ]$mgroup6 <- "nondiscretcomp"
df$mgroup6 <- factor(df$mgroup6)
# Count: mgroup ----------------------------------------------
# Metagroup 1: location (90d)
df$count_mgroup1 <- df$count_group13_p180d
# Metagroup 2: POS method (90d)
df$count_mgroup2 <- 0
df[df$ind_group17_e == 1, ]$count_mgroup2 <- df[df$ind_group17_e == 1, ]$count_group17_e_p180d
# df[df$ind_group17_s == 1, ]$count_mgroup2 <- df$count_group17_s_p90d
df[df$ind_group17_u == 1, ]$count_mgroup2 <- df[df$ind_group17_u == 1, ]$count_group17_u_p180d
df[df$ind_group17_k == 1, ]$count_mgroup2 <- df[df$ind_group17_k == 1, ]$count_group17_k_p180d
# Metagroup 3: Type
df$count_mgroup3 <- 0
df[df$ind_group4 == 1, ]$count_mgroup3 <- df[df$ind_group4 == 1, ]$count_group4_p90d
df[df$ind_group5 == 1, ]$count_mgroup3 <- df[df$ind_group5 == 1, ]$count_group5_p90d
df[df$ind_group7 == 1, ]$count_mgroup3 <- df[df$ind_group7 == 1, ]$count_group7_p30d
df[df$ind_group9 == 1, ]$count_mgroup3 <- df[df$ind_group9 == 1, ]$count_group9_p90d
df[df$ind_group10 == 1, ]$count_mgroup3 <- 3*df[df$ind_group10 == 1, ]$count_group10_p30d
df[df$ind_group18 == 1, ]$count_mgroup3 <- df[df$ind_group18 == 1, ]$count_group18_p180d/2
df[df$ind_group19 == 1, ]$count_mgroup3 <- df[df$ind_group19 == 1, ]$count_group19_p180d/2
# df[df$ind_group24 == 1, ]$count_mgroup3 <- df$count_group24_p90d
df.names[str_detect(df.names, "count_group4")]
l <- subset(df, ind_group4 == 1, select = c("fraud_ind", "count_group4_p180d"))
aggregate(count_group4_p180d ~ fraud_ind, l, max)
# Standard Deviation: mgroup ----------------------------------------------
# Metagroup 1: location (90d)
df$std_mgroup1 <- df$std_group13_p90d
df$mean_mgroup1 <- df$mean_group13_p90d
l <- subset(df, subset = std_mgroup1 != 0 & validation == 0, select = c("fraud_ind", "mean_mgroup1", "authzn_amt", "std_mgroup1"))
l$diff <- apply(l, 1, function(x) abs(x['mean_mgroup1'] - x['authzn_amt']) / x['std_mgroup1'])
aggregate(diff ~ fraud_ind, l, median)
# Metagroup 2: POS method (90d)
df$std_mgroup2 <- 99999999999999999
df$mean_mgroup2 <- 0
df[df$ind_group17_e == 1, ]$std_mgroup2 <- df$std_group17_e_p90d
df[df$ind_group17_s == 1, ]$std_mgroup2 <- df$std_group17_s_p90d
df[df$ind_group17_u == 1, ]$std_mgroup2 <- df$std_group17_u_p90d
df[df$ind_group17_k == 1, ]$std_mgroup2 <- df$std_group17_k_p90d
df[df$ind_group17_e == 1, ]$mean_mgroup2 <- df$mean_group17_e_p90d
df[df$ind_group17_s == 1, ]$mean_mgroup2 <- df$mean_group17_s_p90d
df[df$ind_group17_u == 1, ]$mean_mgroup2 <- df$mean_group17_u_p90d
df[df$ind_group17_k == 1, ]$mean_mgroup2 <- df$mean_group17_k_p90d
df$mgroup2_extreme <- abs(df$mean_mgroup2 - df$authzn_amt) / df$std_group2
# Metagroup 3: Type
df$std_mgroup3 <- 99999999999999999
df$mean_mgroup3 <- 0
df[df$ind_group4 == 1, ]$std_mgroup3 <- df$std_group4_p90d
df[df$ind_group5 == 1, ]$std_mgroup3 <- df$std_group5_p90d
df[df$ind_group7 == 1, ]$std_mgroup3 <- df$std_group7_p30d
df[df$ind_group9 == 1, ]$std_mgroup3 <- df$std_group9_p90d
# df[df$ind_group10 == 1, ]$std_mgroup3 <- df$std_group10_p90d
df[df$ind_group18 == 1, ]$std_mgroup3 <- df$std_group18_p180d
df[df$ind_group19 == 1, ]$std_mgroup3 <- df$std_group19_p180d
# df[df$ind_group24 == 1, ]$std_mgroup3 <- df$std_group24_p90d
df[df$ind_group4 == 1, ]$mean_mgroup3 <- df$mean_group4_p90d
df[df$ind_group5 == 1, ]$mean_mgroup3 <- df$mean_group5_p90d
df[df$ind_group7 == 1, ]$mean_mgroup3 <- df$mean_group7_p30d
df[df$ind_group9 == 1, ]$mean_mgroup3 <- df$mean_group9_p90d
# df[df$ind_group10 == 1, ]$mean_mgroup3 <- df$mean_group10_p90d
df[df$ind_group18 == 1, ]$mean_mgroup3 <- df$mean_group18_p180d
df[df$ind_group19 == 1, ]$mean_mgroup3 <- df$mean_group19_p180d
# df[df$ind_group24 == 1, ]$mean_mgroup3 <- df$mean_group24_p90d
df$mgroup3_extreme <- abs(df$mean_mgroup3 - df$authzn_amt) / df$std_group3
# Create Train and Test Data Frames ---------------------------------------
train.df <- subset(df, validation == 0)
test.df <- subset(df, validation == 1)
q()
